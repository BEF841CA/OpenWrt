#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/update-checker.yml
# Description: Source code update checker
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: Update Checker

env:
  GH_TOKEN: ${{ github.token }}
  REPO_URL1: https://github.com/coolsnowwolf/lede
  REPO_BRANCH1: master
  REPO_URL2: https://github.com/xiaorouji/openwrt-passwall2
  REPO_BRANCH2: main
  REPO_URL3: https://github.com/jerrykuku/luci-theme-argon
  REPO_BRANCH3: 18.06

on:
  workflow_dispatch:
  schedule:
    - cron: 0 */18 * * *

jobs:
  check_repo1:
    runs-on: ubuntu-latest

    steps:
    - name: Create file
      run: touch .commitHash

    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL1 -b $REPO_BRANCH1 .
        echo "commitHash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v4
      with:
        path: .commitHash
        key: commitHash_${{ steps.getHash.outputs.commitHash }}

    - name: Set Flag
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: actions/cache@v4
      with:
        path: .commitHash
        key: trigger_build_flag

  check_repo2:
    runs-on: ubuntu-latest

    steps:
    - name: Create file
      run: touch .commitHash

    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL2 -b $REPO_BRANCH2 .
        echo "commitHash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v4
      with:
        path: .commitHash
        key: commitHash_${{ steps.getHash.outputs.commitHash }}

    - name: Set Flag
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: actions/cache@v4
      with:
        path: .commitHash
        key: trigger_build_flag

  check_repo3:
    runs-on: ubuntu-latest

    steps:
    - name: Create file
      run: touch .commitHash

    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL3 -b $REPO_BRANCH3 .
        echo "commitHash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v4
      with:
        path: .commitHash
        key: commitHash_${{ steps.getHash.outputs.commitHash }}

    - name: Set Flag
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: actions/cache@v4
      with:
        path: .commitHash
        key: trigger_build_flag

  trigger_build:
    needs: [check_repo1, check_repo2, check_repo3]
    runs-on: ubuntu-latest

    permissions:
      actions: write
      contents: write

    steps:
    - name: Get Trigger Build Flag
      id: get_trigger_build_flag
      uses: actions/cache@v4
      with:
        path: .commitHash
        key: trigger_build_flag
        
    - name: Trigger build
      if: steps.get_trigger_build_flag.outputs.cache-hit == 'true'
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ github.token }}
        event-type: Source Code Update

    - name: Delete Flag
      if: steps.get_trigger_build_flag.outputs.cache-hit == 'true'
      run: |
        REPO=${{ github.repository }}
        BRANCH=${{ github.ref }}
        gh extension install actions/gh-actions-cache
        gh actions-cache delete trigger_build_flag -R $REPO -B $BRANCH --confirm

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 0
        keep_minimum_runs: 2
